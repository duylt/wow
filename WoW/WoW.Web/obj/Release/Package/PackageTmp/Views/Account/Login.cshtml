@model WoW.Web.Models.LoginModel
@{
    ViewBag.Title = "[AngleHack] Change Your Habit - WoW";
}
<div class="page-form">
    
    <form method="post" action="login.html" id="login" class="form login-form fade-in-effect in">
        <div class="login-header">
            <div class="external-login" style="margin-bottom: 10px;">
                <a href="#" class="clock">
                    <i class="fa fa-clock-o"></i>
                </a>
            </div>
        </div>
        <div class="header-content text-center"><h1>Wake or Waste</h1></div>
        <div class="body-content">
            <div role="alert" class="alert alert-danger alert-dismissible alert-custom hide">
                <button type="button" data-dismiss="alert" class="close"><span>&times;</span></button>
                Enter any username and password.
            </div>
            <div class="clearfix"></div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="external-login">
                        <a href="@Url.Action("SocialLogin","Account")" class="facebook">
                            <i class="fa fa-facebook"></i>
                            <span id="loginBtn">Connecting...</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<script>
    jQuery(document).ready(function () {
        $('body').removeClass('page-signin page-body login-page').addClass('page-signin page-body login-page');
        $('body').attr('id', 'signin-page');
        $('#wrapper').css('background-color', 'transparent');
    });
</script>

<!--Auto login-->
<script>
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            $('#loginBtn').text("Getting your challenge...")
            // Logged into your app and Facebook.
            document.location = "SocialLogin";
        }
        else {
            $('#loginBtn').text("Challenge Me!")
        }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }

    window.fbAsyncInit = function () {
        FB.init({
            appId: '847957041938797',
            cookie: true,  // enable cookies to allow the server to access 
            // the session
            xfbml: true,  // parse social plugins on this page
            version: 'v2.2' // use version 2.2
        });

        // Now that we've initialized the JavaScript SDK, we call
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.

        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });

    };

    // Load the SDK asynchronously
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>
